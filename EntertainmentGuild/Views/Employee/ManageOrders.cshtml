@model List<EntertainmentGuild.Models.Order>

@{
    // Set the layout page for employee views
    Layout = "~/Views/Shared/_EmployeeLayout.cshtml";

    // Set the page title
    ViewData["Title"] = "Manage Orders";

    // Get list of customers passed from controller via ViewBag
    var customers = ViewBag.Customers as List<Microsoft.AspNetCore.Identity.IdentityUser>;

    // Get currently selected customer's email (for filtering orders)
    var selectedEmail = ViewBag.SelectedEmail as string;
}

<style>
    body {
        background-color: white;
    }

    .category-panel {
        background-color: #fdf7e4;
        border-radius: 12px;
        padding: 20px;
        border: none;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.03);
    }

        .category-panel h5 {
            font-weight: 600;
            margin-bottom: 16px;
            font-size: 1rem;
        }

    .btn-customer {
        background-color: white;
        border: 1px solid #d6cdb5;
        color: #2e2e2e;
        font-size: 0.9rem;
        border-radius: 6px;
        transition: all 0.2s ease;
    }

        .btn-customer.active,
        .btn-customer:hover {
            background-color: #b29b4b;
            color: white;
            border-color: #b29b4b;
        }

    .order-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));
        gap: 20px;
    }

    .custom-alert-gold {
        background-color: #fcf6dc;
        color: #5c4d18;
        border: 1px solid #e3ddc6;
        border-radius: 10px;
        padding: 15px 20px;
        font-size: 1rem;
        font-weight: 500;
    }


    .order-card {
        border: none;
        border-radius: 12px;
        background-color: #fff;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
        padding: 16px;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .order-header {
        font-weight: 600;
        font-size: 1rem;
        margin-bottom: 10px;
    }

    .order-item {
        font-size: 0.875rem;
        margin-bottom: 4px;
        line-height: 1.4;
    }

    .order-footer {
        margin-top: auto;
        text-align: right;
    }

    .btn-edit {
        background-color: #b29b4b;
        color: white;
        border: none;
        padding: 6px 16px;
        font-size: 0.85rem;
        font-weight: 500;
        border-radius: 50px;
        transition: background-color 0.2s ease;
    }

        .btn-edit:hover {
            background-color: #a18e3c;
        }
</style>

<div class="container mt-5 mb-5">
    <!-- Page heading with icon -->
    <h4 class="mb-4"><i class="bi bi-clipboard-data me-2 text-warning"></i>Customer Order History</h4>

    <div class="row">
        <!-- Customer list panel -->
        <div class="col-md-3 mb-4">
            <div class="category-panel">
                <h5><i class="bi bi-people-fill me-2"></i>Customers</h5>

                <!-- Loop through each customer and display their email as a button -->
                @foreach (var customer in customers)
                {
                    <div class="mb-2">
                        <a class="btn btn-customer w-100 @(customer.Email == selectedEmail ? "active" : "")"
                           asp-controller="Employee"
                           asp-action="ManageOrders"
                           asp-route-userEmail="@customer.Email">
                            @customer.Email
                        </a>
                    </div>
                }
            </div>
        </div>

        <!-- Orders display panel -->
        <div class="col-md-9">
            @* If no customer is selected, prompt user to select one *@
            @if (string.IsNullOrEmpty(selectedEmail))
            {
                <div class="alert alert-info">Please select a customer to view their orders.</div>
            }
            @* If customer selected but no orders found *@
            else if (!Model.Any())
            {
                <div class="alert alert-warning">This customer has no orders.</div>
            }
            else
            {
                <!-- Display orders in a responsive grid -->
                <div class="order-grid">
                    @foreach (var order in Model)
                    {
                        <div class="order-card">
                            <!-- Order header showing order ID and date/time -->
                            <div class="order-header">
                                Order #@order.Id
                                <div class="text-muted small">@order.OrderDate.ToString("yyyy-MM-dd HH:mm")</div>
                            </div>

                            <!-- List all items in the order -->
                            <div>
                                @foreach (var item in order.OrderItems)
                                {
                                    <div class="order-item">
                                        <strong>@item.Product.Name</strong> × @item.Quantity<br />
                                        <span class="text-muted">¥@item.Product.Price.ToString("F2")</span>
                                    </div>
                                }
                            </div>

                            <!-- Footer with button to edit shipping status -->
                            <div class="order-footer mt-3">
                                <a class="btn btn-edit"
                                   asp-controller="Employee"
                                   asp-action="EditShippingStatus"
                                   asp-route-id="@order.Id">
                                    Edit Shipping
                                </a>
                            </div>
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>