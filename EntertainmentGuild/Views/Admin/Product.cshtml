@using EntertainmentGuild.Models.Admin
@model IEnumerable<Product>

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";  // Use admin layout
    ViewData["Title"] = "Manage Products";          // Page title

    var category = ViewBag.SelectedCategory as string;      // Selected category filter
    var subCategory = ViewBag.SelectedSubCategory as string; // Selected subcategory filter

    // Map of categories to their subcategories for filtering and form dropdowns
    var subCategoryMap = new Dictionary<string, List<string>> {
        { "Clothing", new() { "Shirt", "Vest", "T-shirt", "Jacket", "Down Coat", "Suit" } },
        { "Pants", new() { "Long Pants", "Shorts", "Cargo Pants", "Dress Pants" } },
        { "Skirts", new() { "Dress", "Mini Skirt", "Long Skirt" } },
        { "Hats", new() { "Baseball Cap", "Bucket Hat" } },
        { "Shoes", new() { "Sneakers", "Skate Shoes", "High Heels", "Slippers" } }
    };
}

<style>
    /* Color variables */
    :root {
        --cream: #fdf7e4;
        --gold: #b29b4b;
        --text-dark: #2e2e2e;
        --border-light: #e4dec7;
    }

    /* Category card styling */
    .category-card {
        border-radius: 12px;
        border: 1px solid var(--border-light);
        box-shadow: 0 3px 10px rgba(0, 0, 0, 0.04);
        background-color: #fdf7e4;
        border: none;
        box-shadow: 0 2px 8px rgba(0,0,0,0.03);
    }

        /* Category card header */
        .category-card .card-header {
            background-color: var(--gold);
            color: white;
            font-weight: bold;
            border-top-left-radius: 12px;
            border-top-right-radius: 12px;
        }

    /* Category links */
    .category-link {
        display: block;
        padding: 4px 8px;
        border-radius: 6px;
        text-decoration: none;
        color: var(--text-dark);
        font-size: 0.95rem;
        transition: background-color 0.2s ease;
    }

        /* Hover and active states for category links */
        .category-link:hover,
        .category-link.active {
            background-color: var(--gold);
            color: white !important;
            font-weight: 500;
        }

    /* Form section styling */
    .form-section {
        background-color: var(--cream);
        border: 1px solid var(--border-light);
        border-radius: 12px;
        padding: 16px;
    }

    /* Gold button styling */
    .btn-gold {
        background-color: var(--gold);
        color: white;
        border: none;
        font-weight: 500;
        border-radius: 50px;
    }

        .btn-gold:hover {
            background-color: #a58d3f;
        }

    /* Product images styling */
    .product-table img {
        border-radius: 6px;
        border: 1px solid #ccc;
    }

    /* Table cell vertical alignment */
    .table th, .table td {
        vertical-align: middle;
    }
</style>

<div class="container-fluid mt-4">
    <div class="row">
        <!-- Left: Category filter panel -->
        <div class="col-md-3 mb-4">
            <div class="card category-card shadow-sm">
                <div class="card-header bg-white border-bottom fw-bold" style="color: var(--gold);">
                    Categories
                </div>
                <div class="card-body">
                    <ul class="list-unstyled">
                        @foreach (var kv in subCategoryMap)
                        {
                            <li class="mb-2">
                                <strong class="text-dark">@kv.Key</strong>
                                <ul class="list-unstyled ms-3 mt-1">
                                    @foreach (var sub in kv.Value)
                                    {
                                        var isActive = sub == subCategory ? "active" : "";
                                        <li>
                                            <!-- Link to filter by category and subcategory -->
                                            <a href="@Url.Action("Product", "Admin", new { category = kv.Key, subCategory = sub })"
                                               class="category-link @isActive">
                                                @sub
                                            </a>
                                        </li>
                                    }
                                </ul>
                            </li>
                        }
                    </ul>
                    <hr />
                    <!-- Show all products link -->
                    <a href="@Url.Action("Product", "Admin")" class="btn btn-outline-secondary w-100 btn-sm rounded-pill">
                        Show All
                    </a>
                </div>
            </div>
        </div>

        <!-- Right: Products list and add product form -->
        <div class="col-md-9">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h4>Products List</h4>
                <!-- Link to edit top products -->
                <a href="@Url.Action("TopProducts", "Admin")" class="btn btn-sm btn-outline-secondary rounded-pill">🎯 Edit Top Products</a>
            </div>

            <!-- Add product form -->
            <form asp-action="AddProduct" method="post" enctype="multipart/form-data" class="row g-3 form-section mb-4">
                <div class="col-md-3">
                    <input name="Name" class="form-control" placeholder="Name" required />
                </div>
                <div class="col-md-2">
                    <input name="Price" type="number" step="0.01" class="form-control" placeholder="Price" required />
                </div>
                <div class="col-md-2">
                    <select name="Category" class="form-select" id="categorySelect" required>
                        <option value="">Category</option>
                        @foreach (var cat in subCategoryMap.Keys)
                        {
                            <option>@cat</option>
                        }
                    </select>
                </div>
                <div class="col-md-2">
                    <select name="SubCategory" class="form-select" id="subCategorySelect" required>
                        <option value="">SubCategory</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <input type="file" name="ImageFile" accept="image/*" class="form-control" />
                </div>
                <div class="col-md-12">
                    <textarea name="Description" class="form-control" placeholder="Description (optional)" rows="2"></textarea>
                </div>
                <div class="col-md-2">
                    <button type="submit" class="btn btn-gold w-100">➕ Add</button>
                </div>
            </form>

            @if (!Model.Any())
            {
                <!-- Message if no products -->
                <p class="text-muted">No products found.</p>
            }
            else
            {
                <!-- Products table -->
                <table class="table table-hover table-bordered product-table">
                    <thead class="table-light">
                        <tr>
                            <th>Image</th>
                            <th>Name</th>
                            <th>Price</th>
                            <th>Category</th>
                            <th>SubCategory</th>
                            <th>Description</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @if (item.ImageData != null)
                                    {
                                        <!-- Show product image -->
                                        <img src="@Url.Action("ProductImage", "Image", new { id = item.Id })" width="60" />
                                    }
                                    else
                                    {
                                        <span class="text-muted small">No Image</span>
                                    }
                                </td>
                                <td>@item.Name</td>
                                <td>@item.Price.ToString("C")</td>
                                <td>@item.Category</td>
                                <td>@item.SubCategory</td>
                                <td>@item.Description</td>
                                <td>
                                    <!-- Edit product button -->
                                    <a asp-action="EditProduct" asp-route-id="@item.Id" class="btn btn-sm btn-gold">Edit</a>
                                    <!-- Delete product form -->
                                    <form asp-action="DeleteProduct" method="post" class="d-inline">
                                        <input type="hidden" name="id" value="@item.Id" />
                                        <button class="btn btn-sm btn-outline-danger">Delete</button>
                                    </form>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Map of categories to subcategories for the add product form dropdowns
        const subCategoryMap = {
            "Clothing": ["Shirt", "Vest", "T-shirt", "Jacket", "Down Coat", "Suit"],
            "Pants": ["Long Pants", "Shorts", "Cargo Pants", "Dress Pants"],
            "Skirts": ["Dress", "Mini Skirt", "Long Skirt"],
            "Hats": ["Baseball Cap", "Bucket Hat"],
            "Shoes": ["Sneakers", "Skate Shoes", "High Heels", "Slippers"]
        };

        const categorySelect = document.getElementById('categorySelect');
        const subCategorySelect = document.getElementById('subCategorySelect');

        // Update subcategory options based on selected category
        categorySelect.addEventListener('change', function () {
            const selected = categorySelect.value;
            const subs = subCategoryMap[selected] || [];
            subCategorySelect.innerHTML = '<option value="">SubCategory</option>';
            for (let sub of subs) {
                const option = document.createElement('option');
                option.value = sub;
                option.text = sub;
                subCategorySelect.appendChild(option);
            }
        });
    </script>
}
